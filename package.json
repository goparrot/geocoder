{
    "name": "@goparrot/geocoder",
    "description": "TypeScript GeoCoder, node geocoding library, supports google maps, mapquest, here, open street map, tom tom",
    "version": "4.5.0",
    "author": "Coroliov Oleg",
    "license": "MIT",
    "private": false,
    "bugs": {
        "url": "https://github.com/goparrot/geocoder/issues"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/goparrot/geocoder.git"
    },
    "keywords": [
        "node",
        "typescript",
        "geo",
        "geocode",
        "geocoder",
        "geocoding",
        "geolocation",
        "reverse",
        "suggest",
        "autocomplete",
        "places",
        "google-maps",
        "arcgis",
        "here",
        "mapquest"
    ],
    "engines": {
        "node": ">=12"
    },
    "main": "src/index.ts",
    "husky": {
        "hooks": {
            "commit-msg": "commitlint -E HUSKY_GIT_PARAMS && npm run pre-commit",
            "post-commit": "git update-index --again"
        }
    },
    "lint-staged": {
        "*.{ts,tsx,json,js,jsx}": [
            "npm run format:base"
        ],
        "*.md": [
            "npm run prettier:base"
        ]
    },
    "config": {
        "commitizen": {
            "path": "cz-conventional-changelog"
        }
    },
    "standard-version": {
        "scripts": {
            "postchangelog": "npm run remark"
        }
    },
    "scripts": {
        "commit": "git-cz",
        "test": "mocha 'test/unit/**/*.spec.ts' 'test/e2e/**/*.spec.ts'",
        "test:all": "mocha --timeout 15000 'test/**/*.spec.ts'",
        "test:unit": "mocha 'test/unit/**/*.spec.ts'",
        "test:e2e": "mocha 'test/e2e/**/*.spec.ts'",
        "test:integration": "mocha --timeout 15000 'test/integration/**/*.spec.ts'",
        "coverage": "nyc npm test",
        "coverage:all": "nyc npm run test:all",
        "prettier": "npm run prettier:base -- '**/**.+(md)'",
        "prettier:base": "prettier --ignore-path .eslintignore --write",
        "format": "npm run prettier && npm run lint -- --fix",
        "format:base": "npm run lint:base -- --fix",
        "format:staged": "git add . && lint-staged --allow-empty -q",
        "lint": "npm run lint:base -- './**/**.{ts,tsx,js,json}'",
        "lint:base": "npm run lint:config:check && eslint",
        "lint:config:check": "eslint-config-prettier src/index.ts",
        "build:dist": "rimraf dist/* && run-p build:dist:cjs build:dist:esm build:dist:types",
        "build:dist:cjs": "tsc -b tsconfig.build-cjs.json",
        "build:dist:esm": "tsc -b tsconfig.build-esm.json",
        "build:dist:types": "tsc -b tsconfig.build-types.json",
        "remark": "remark README.md CHANGELOG.md CONTRIBUTING.md CODE_OF_CONDUCT.md .github/ -o -f -q && git add .",
        "typecheck": "tsc -p tsconfig.json --noEmit",
        "pre-commit": "git add . && run-p format:staged typecheck && run-p build:dist lint remark coverage:all",
        "prepublishOnly": "echo \"use 'npm run release:dev' or 'npm run version:stable' and make PR to master branch, CD/CI will do the rest of the work\" && exit 1",
        "publish": "npm run build:dist && ts-node -T bin/prepublish.ts && npm publish ./dist",
        "version": "echo \"use 'npm run version:dev' or 'npm run version:stable'\" && exit 1",
        "version:dev": "standard-version --no-verify --prerelease dev --skip.changelog --skip.tag --skip.commit",
        "version:stable": "standard-version --no-verify --skip.tag && git push origin",
        "release:dev": "npm run version:dev && npm run publish -- --tag dev",
        "release:dev:dry": "npm run release:dev -- --dry-run",
        "github-release": "conventional-github-releaser -p angular"
    },
    "peerDependencies": {
        "axios": ">=0.21.1",
        "reflect-metadata": ">=0.1.13"
    },
    "dependencies": {
        "@types/heremaps": "^3.1.5",
        "class-transformer": "^0.5.1",
        "class-validator": "^0.13.2",
        "lodash.isempty": "^4.4.0",
        "world-countries": "4.0.0"
    },
    "devDependencies": {
        "@commitlint/cli": "^17.1.2",
        "@commitlint/config-conventional": "^17.1.0",
        "@commitlint/travis-cli": "^17.1.2",
        "@goparrot/eslint-config": "^1.0.3",
        "@types/chai": "^4.3.0",
        "@types/chai-as-promised": "^7.1.3",
        "@types/lodash.isempty": "^4.4.6",
        "@types/mocha": "^9.0.0",
        "@types/node": "^18.8.2",
        "@types/semver": "^7.3.9",
        "@types/sinon": "^10.0.6",
        "@types/supertest": "^2.0.10",
        "axios": "^0.27.2",
        "axios-mock-adapter": "^1.19.0",
        "chai": "^4.3.3",
        "chai-as-promised": "^7.1.1",
        "commitizen": "^4.2.3",
        "conventional-github-releaser": "^3.1.5",
        "dotenv": "^16.0.3",
        "husky": "^8.0.1",
        "lint-staged": "^13.0.3",
        "mocha": "^10.0.0",
        "mocha-junit-reporter": "^2.0.0",
        "npm-run-all": "^4.1.5",
        "nyc": "^15.1.0",
        "prettier": "^2.5.1",
        "reflect-metadata": ">=0.1.13",
        "remark-cli": "^11.0.0",
        "remark-frontmatter": "^4.0.1",
        "remark-github": "^11.2.2",
        "remark-lint-emphasis-marker": "^3.1.1",
        "remark-lint-strong-marker": "^3.1.1",
        "rimraf": "^3.0.2",
        "semver": "^7.3.5",
        "sinon": "^14.0.1",
        "source-map-support": "^0.5.21",
        "standard-version": "^9.3.2",
        "supertest": "^6.1.3",
        "ts-node": "^10.4.0",
        "tsconfig-paths": "^4.1.0",
        "typescript": "^4.5.4"
    }
}
